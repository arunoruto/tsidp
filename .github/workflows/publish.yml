name: Publish Docker image

on:
  # push:
  #   branches: [main]
  schedule:
    # Runs "every Sunday at 5 in the morning" (see https://crontab.guru)
    - cron: "0 5 * * 0"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Get latest tailscale release tag
        run: |
          TAILSCALE_VERSION=$(curl -s https://api.github.com/repos/tailscale/tailscale/releases/latest | jq -r '.tag_name')
          echo "Latest tailscale version: $TAILSCALE_VERSION"
          echo TAILSCALE_VERSION=$TAILSCALE_VERSION >> $GITHUB_ENV

      - name: Check out tailscale repo
        uses: actions/checkout@v4
        with:
          repository: tailscale/tailscale
          ref: ${{ env.TAILSCALE_VERSION }}
          path: tailscale

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create env variable for image path/url
        run: echo IMAGE_PATH=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PATH }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          #tags: ${{ steps.meta.outputs.tags }}
          tags: |
            ${{ env.IMAGE_PATH }}:latest
            ${{ env.IMAGE_PATH }}:${{ env.TAILSCALE_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
