name: Check Submodule Tags
on:
  schedule:
    - cron: "0 0 * * *" # Daily check
  workflow_dispatch:

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    permissions: # Job-level permissions configuration starts here
      contents: write # 'write' access to repository contents
      pull-requests: write # 'write' access to pull requests
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Get Latest Tag
        id: get-tag
        run: |
          LATEST_TAG=$(git ls-remote --tags --sort=-v:refname https://github.com/tailscale/tailscale.git | grep -vF '{}' | grep -v -- '-pre$' | head -n1 | awk -F/ '{print $3}')
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Update Submodule
        id: update-submodule
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Get current commit of the Tailscale submodule
          CURRENT_COMMIT=$(git submodule status --recursive | grep "tailscale" | awk '{print $1}')

          NUMBER_OF_TAGS=$(git ls-remote https://github.com/tailscale/tailscale.git "refs/tags/${{ steps.get-tag.outputs.latest_tag }}*" | wc -l)

          # Get commit hash of the latest tag
          if [[ $NUMBER_OF_TAGS == 2 ]]; then
            LATEST_COMMIT=$(git ls-remote https://github.com/tailscale/tailscale.git "refs/tags/${{ steps.get-tag.outputs.latest_tag }}^{}" | awk '{print $1}')
          elif [[ $NUMBER_OF_TAGS == 1 ]]; then
            LATEST_COMMIT=$(git ls-remote https://github.com/tailscale/tailscale.git "refs/tags/${{ steps.get-tag.outputs.latest_tag }}" | awk '{print $1}')
          else
            LATEST_COMMIT=$(git ls-remote https://github.com/tailscale/tailscale.git "refs/tags/${{ steps.get-tag.outputs.latest_tag }}^{}" | awk '{print $1}')
            echo "::debug::Number of lines is weird... Check the output below"
            git ls-remote https://github.com/tailscale/tailscale.git "refs/tags/${{ steps.get-tag.outputs.latest_tag }}*"          fi
          fi

          echo "current=$CURRENT_COMMIT"
          echo "latest=$LATEST_COMMIT"

          if [ -z $LATEST_COMMIT ]; then
            echo "::error title=Latest commit hash error::Could not determine the latest commit hash. Please check for errors."
            exit 1
          elif [ "$CURRENT_COMMIT" != "$LATEST_COMMIT" ]; then
            cd tailscale
            git fetch --tags
            git checkout ${{ steps.get-tag.outputs.latest_tag }}
            cd ..
            git add tailscale
            git commit -m "chore: update submodule to ${{ steps.get-tag.outputs.latest_tag }}"
            git push

            echo "submodule_updated=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Workflow was manually triggered! Forcing image build!"
            echo "submodule_updated=true" >> $GITHUB_OUTPUT
          else
            echo "Tailscale submodule already up-to-date."
            echo "submodule_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Create files for upload
        run: |
          mkdir data
          echo ${{ steps.get-tag.outputs.latest_tag }} > data/latest_tag
          echo ${{ steps.update-submodule.outputs.submodule_updated }} > data/submodule_updated

      - name: Update files
        uses: actions/upload-artifact@v4
        with:
          name: submodule-data
          path: data
